var t;
(t = "undefined" != typeof window ? window : this),
	"object" == typeof module &&
		"object" == typeof module.exports &&
		(module.exports = t.document
			? void 0
			: function (e) {
					if (!e.document)
						throw Error("jQuery requires a window with a document");
			  }),
	(function (e) {
		"use strict";
		(e.breakingNews = function (i, s) {
			var n = {
					effect: "scroll",
					direction: "ltr",
					height: 20,
					fontSize: "default",
					themeColor: "default",
					background: "default",
					borderWidth: 1,
					radius: 2,
					source: "html",
					rss2jsonApiKey: "",
					play: !0,
					delayTimer: 4e3,
					scrollSpeed: 2,
					stopOnHover: !0,
					position: "auto",
					zIndex: 99999,
				},
				r = this;
			r.settings = {};
			var o = e(i),
				a = o.children(".bn-label"),
				l = o.children(".bn-news"),
				c = l.children("ul"),
				d = c.children("li"),
				f = o.children(".bn-controls"),
				h = f.find(".bn-prev").parent(),
				g = f.find(".bn-action").parent(),
				u = f.find(".bn-next").parent(),
				p = !1,
				$ = !0,
				m = c.children("li").length,
				b = 0,
				y = !1,
				k = function () {
					if (
						(0 < a.length &&
							("rtl" == r.settings.direction
								? l.css({ right: a.outerWidth() })
								: l.css({ left: a.outerWidth() })),
						0 < f.length)
					) {
						var i = f.outerWidth();
						"rtl" == r.settings.direction
							? l.css({ left: i })
							: l.css({ right: i });
					}
					if ("scroll" === r.settings.effect) {
						var s = 0;
						d.each(function () {
							s += e(this).outerWidth();
						}),
							(s += 10),
							c.css({ width: s });
					}
				},
				v = function () {
					var e = parseFloat(c.css("marginLeft"));
					(e -= r.settings.scrollSpeed / 2),
						c.css({ marginLeft: e }),
						e <= -c.find("li:first-child").outerWidth() &&
							(c
								.find("li:first-child")
								.insertAfter(c.find("li:last-child")),
							c.css({ marginLeft: 0 })),
						!1 === p &&
							((window.requestAnimationFrame &&
								requestAnimationFrame(v)) ||
								setTimeout(v, 16));
				},
				w = function () {
					var e = parseFloat(c.css("marginRight"));
					(e -= r.settings.scrollSpeed / 2),
						c.css({ marginRight: e }),
						e <= -c.find("li:first-child").outerWidth() &&
							(c
								.find("li:first-child")
								.insertAfter(c.find("li:last-child")),
							c.css({ marginRight: 0 })),
						!1 === p &&
							((window.requestAnimationFrame &&
								requestAnimationFrame(w)) ||
								setTimeout(w, 16));
				},
				_ = function () {
					switch ((($ = !0), r.settings.effect)) {
						case "typography":
							c.find("li").hide(),
								c.find("li").eq(b).width(30).show(),
								c
									.find("li")
									.eq(b)
									.animate(
										{ width: "100%", opacity: 1 },
										1500
									);
							break;
						case "fade":
							c.find("li").hide(), c.find("li").eq(b).fadeIn();
							break;
						case "slide-down":
							m <= 1
								? c
										.find("li")
										.animate(
											{ top: 30, opacity: 0 },
											300,
											function () {
												e(this).css({
													top: -30,
													opacity: 0,
													display: "block",
												}),
													e(this).animate(
														{ top: 0, opacity: 1 },
														300
													);
											}
										)
								: (c
										.find("li:visible")
										.animate(
											{ top: 30, opacity: 0 },
											300,
											function () {
												e(this).hide();
											}
										),
								  c
										.find("li")
										.eq(b)
										.css({ top: -30, opacity: 0 })
										.show(),
								  c
										.find("li")
										.eq(b)
										.animate({ top: 0, opacity: 1 }, 300));
							break;
						case "slide-up":
							m <= 1
								? c
										.find("li")
										.animate(
											{ top: -30, opacity: 0 },
											300,
											function () {
												e(this).css({
													top: 30,
													opacity: 0,
													display: "block",
												}),
													e(this).animate(
														{ top: 0, opacity: 1 },
														300
													);
											}
										)
								: (c
										.find("li:visible")
										.animate(
											{ top: -30, opacity: 0 },
											300,
											function () {
												e(this).hide();
											}
										),
								  c
										.find("li")
										.eq(b)
										.css({ top: 30, opacity: 0 })
										.show(),
								  c
										.find("li")
										.eq(b)
										.animate({ top: 0, opacity: 1 }, 300));
							break;
						case "slide-left":
							m <= 1
								? c
										.find("li")
										.animate(
											{ left: "50%", opacity: 0 },
											300,
											function () {
												e(this).css({
													left: -50,
													opacity: 0,
													display: "block",
												}),
													e(this).animate(
														{ left: 0, opacity: 1 },
														300
													);
											}
										)
								: (c
										.find("li:visible")
										.animate(
											{ left: "50%", opacity: 0 },
											300,
											function () {
												e(this).hide();
											}
										),
								  c
										.find("li")
										.eq(b)
										.css({ left: -50, opacity: 0 })
										.show(),
								  c
										.find("li")
										.eq(b)
										.animate({ left: 0, opacity: 1 }, 300));
							break;
						case "slide-right":
							m <= 1
								? c
										.find("li")
										.animate(
											{ left: "-50%", opacity: 0 },
											300,
											function () {
												e(this).css({
													left: "50%",
													opacity: 0,
													display: "block",
												}),
													e(this).animate(
														{ left: 0, opacity: 1 },
														300
													);
											}
										)
								: (c
										.find("li:visible")
										.animate(
											{ left: "-50%", opacity: 0 },
											300,
											function () {
												e(this).hide();
											}
										),
								  c
										.find("li")
										.eq(b)
										.css({ left: "50%", opacity: 0 })
										.show(),
								  c
										.find("li")
										.eq(b)
										.animate({ left: 0, opacity: 1 }, 300));
							break;
						default:
							c.find("li").hide(), c.find("li").eq(b).show();
					}
				},
				q = function () {
					(p = !1),
						r.settings.play &&
							("scroll" === r.settings.effect
								? "rtl" === r.settings.direction
									? c.width() > l.width() && w()
									: c.width() > l.width() && v()
								: (r.pause(),
								  (y = setInterval(function () {
										r.next();
								  }, r.settings.delayTimer))));
				};
			(r.init = function () {
				var i, f;
				if (
					((r.settings = e.extend({}, n, s)),
					"fixed-top" === r.settings.position
						? o
								.addClass("bn-fixed-top")
								.css({ "z-index": r.settings.zIndex })
						: "fixed-bottom" === r.settings.position &&
						  o
								.addClass("bn-fixed-bottom")
								.css({ "z-index": r.settings.zIndex }),
					"default" != r.settings.fontSize &&
						o.css({ "font-size": r.settings.fontSize }),
					"default" != r.settings.themeColor &&
						(o.css({
							"border-color": r.settings.themeColor,
							color: r.settings.themeColor,
						}),
						a.css({ background: r.settings.themeColor })),
					"default" != r.settings.background &&
						o.css({ background: r.settings.background }),
					o.css({
						height: r.settings.height,
						"line-height":
							r.settings.height -
							2 * r.settings.borderWidth +
							"px",
						"border-radius": r.settings.radius,
						"border-width": r.settings.borderWidth,
					}),
					d
						.find(".bn-seperator")
						.css({
							height:
								r.settings.height - 2 * r.settings.borderWidth,
						}),
					o.addClass(
						"bn-effect-" +
							r.settings.effect +
							" bn-direction-" +
							r.settings.direction
					),
					k(),
					"object" == typeof r.settings.source)
				)
					switch (r.settings.source.type) {
						case "rss":
							"rss2json" === r.settings.source.usingApi
								? (((f =
										new XMLHttpRequest()).onreadystatechange =
										function () {
											if (
												4 == f.readyState &&
												200 == f.status
											) {
												var e = JSON.parse(
														f.responseText
													),
													i = "",
													s = "";
												switch (
													r.settings.source
														.showingField
												) {
													case "title":
													default:
														s = "title";
														break;
													case "description":
														s = "description";
														break;
													case "link":
														s = "link";
												}
												var n = "";
												void 0 ===
													r.settings.source
														.seperator ||
													(r.settings.source
														.seperator,
													0) ||
													(n =
														r.settings.source
															.seperator);
												for (
													var o = 0;
													o < e.items.length;
													o++
												)
													r.settings.source
														.linkEnabled
														? (i +=
																'<li><a target="' +
																r.settings
																	.source
																	.target +
																'" href="' +
																e.items[o]
																	.link +
																'">' +
																n +
																e.items[o][s] +
																"</a></li>")
														: (i +=
																"<li><a>" +
																n +
																e.items[o][s] +
																"</a></li>");
												c.empty().append(i),
													(d = c.children("li")),
													(m =
														c.children(
															"li"
														).length),
													k(),
													"scroll" !=
														r.settings.effect &&
														_(),
													d
														.find(".bn-seperator")
														.css({
															height:
																r.settings
																	.height -
																2 *
																	r.settings
																		.borderWidth,
														}),
													q();
											}
										}),
								  f.open(
										"GET",
										"https://api.rss2json.com/v1/api.json?rss_url=" +
											r.settings.source.url +
											"&count=" +
											r.settings.source.limit +
											"&api_key=" +
											r.settings.source.rss2jsonApiKey,
										!0
								  ),
								  f.send())
								: ((i = new XMLHttpRequest()).open(
										"GET",
										"https://query.yahooapis.com/v1/public/yql?q=" +
											encodeURIComponent(
												'select * from rss where url="' +
													r.settings.source.url +
													'" limit ' +
													r.settings.source.limit
											) +
											"&format=json",
										!0
								  ),
								  (i.onreadystatechange = function () {
										if (4 == i.readyState) {
											if (200 == i.status) {
												var e = JSON.parse(
														i.responseText
													),
													s = "",
													n = "";
												switch (
													r.settings.source
														.showingField
												) {
													case "title":
													default:
														n = "title";
														break;
													case "description":
														n = "description";
														break;
													case "link":
														n = "link";
												}
												var o = "";
												"undefined" !=
													r.settings.source
														.seperator &&
													void 0 !==
														r.settings.source
															.seperator &&
													(o =
														r.settings.source
															.seperator);
												for (
													var a = 0;
													a <
													e.query.results.item.length;
													a++
												)
													r.settings.source
														.linkEnabled
														? (s +=
																'<li><a target="' +
																r.settings
																	.source
																	.target +
																'" href="' +
																e.query.results
																	.item[a]
																	.link +
																'">' +
																o +
																e.query.results
																	.item[a][
																	n
																] +
																"</a></li>")
														: (s +=
																"<li><a>" +
																o +
																e.query.results
																	.item[a][
																	n
																] +
																"</a></li>");
												c.empty().append(s),
													(d = c.children("li")),
													(m =
														c.children(
															"li"
														).length),
													k(),
													"scroll" !=
														r.settings.effect &&
														_(),
													d
														.find(".bn-seperator")
														.css({
															height:
																r.settings
																	.height -
																2 *
																	r.settings
																		.borderWidth,
														}),
													q();
											} else
												c.empty().append(
													'<li><span class="bn-loader-text">' +
														r.settings.source
															.errorMsg +
														"</span></li>"
												);
										}
								  }),
								  i.send(null));
							break;
						case "json":
							e.getJSON(r.settings.source.url, function (e) {
								var i,
									s = "";
								i =
									"undefined" ===
									r.settings.source.showingField
										? "title"
										: r.settings.source.showingField;
								var n = "";
								void 0 === r.settings.source.seperator ||
									(r.settings.source.seperator, 0) ||
									(n = r.settings.source.seperator);
								for (
									var o = 0;
									o < e.length &&
									!(o >= r.settings.source.limit);
									o++
								)
									r.settings.source.linkEnabled
										? (s +=
												'<li><a target="' +
												r.settings.source.target +
												'" href="' +
												e[o].link +
												'">' +
												n +
												e[o][i] +
												"</a></li>")
										: (s +=
												"<li><a>" +
												n +
												e[o][i] +
												"</a></li>"),
										"undefined" === e[o][i] &&
											console.log(
												'"' +
													i +
													'" does not exist in this json.'
											);
								c.empty().append(s),
									(d = c.children("li")),
									(m = c.children("li").length),
									k(),
									"scroll" != r.settings.effect && _(),
									d
										.find(".bn-seperator")
										.css({
											height:
												r.settings.height -
												2 * r.settings.borderWidth,
										}),
									q();
							});
							break;
						default:
							console.log(
								'Please check your "source" object parameter. Incorrect Value'
							);
					}
				else
					"html" === r.settings.source
						? ("scroll" != r.settings.effect && _(), q())
						: console.log(
								'Please check your "source" parameter. Incorrect Value'
						  );
				r.settings.play
					? g.find("span").removeClass("bn-play").addClass("bn-pause")
					: g
							.find("span")
							.removeClass("bn-pause")
							.addClass("bn-play"),
					o.on("mouseleave", function (i) {
						var s = e(
							document.elementFromPoint(i.clientX, i.clientY)
						).parents(".breaking-news-ticker")[0];
						e(this)[0] !== s &&
							(!0 === r.settings.stopOnHover
								? !0 === r.settings.play && r.play()
								: !0 === r.settings.play &&
								  !0 === p &&
								  r.play());
					}),
					o.on("mouseenter", function () {
						!0 === r.settings.stopOnHover && r.pause();
					}),
					u.on("click", function () {
						$ && (($ = !1), r.pause(), r.next());
					}),
					h.on("click", function () {
						$ && (($ = !1), r.pause(), r.prev());
					}),
					g.on("click", function () {
						$ &&
							(g.find("span").hasClass("bn-pause")
								? (g
										.find("span")
										.removeClass("bn-pause")
										.addClass("bn-play"),
								  r.stop())
								: ((r.settings.play = !0),
								  g
										.find("span")
										.removeClass("bn-play")
										.addClass("bn-pause")));
					}),
					e(window).on("resize", function () {
						480 > o.width()
							? (a.hide(),
							  "rtl" == r.settings.direction
									? l.css({ right: 0 })
									: l.css({ left: 0 }))
							: (a.show(),
							  "rtl" == r.settings.direction
									? l.css({ right: a.outerWidth() })
									: l.css({ left: a.outerWidth() }));
					});
			}),
				(r.pause = function () {
					(p = !0), clearInterval(y);
				}),
				(r.stop = function () {
					(p = !0), (r.settings.play = !1);
				}),
				(r.play = function () {
					q();
				}),
				(r.next = function () {
					"scroll" === r.settings.effect
						? "rtl" === r.settings.direction
							? c
									.stop()
									.animate(
										{
											marginRight: -c
												.find("li:first-child")
												.outerWidth(),
										},
										300,
										function () {
											c
												.find("li:first-child")
												.insertAfter(
													c.find("li:last-child")
												),
												c.css({ marginRight: 0 }),
												($ = !0);
										}
									)
							: c
									.stop()
									.animate(
										{
											marginLeft: -c
												.find("li:first-child")
												.outerWidth(),
										},
										300,
										function () {
											c
												.find("li:first-child")
												.insertAfter(
													c.find("li:last-child")
												),
												c.css({ marginLeft: 0 }),
												($ = !0);
										}
									)
						: (m <= ++b && (b = 0), _());
				}),
				(r.prev = function () {
					"scroll" === r.settings.effect
						? "rtl" === r.settings.direction
							? (0 <= parseInt(c.css("marginRight"), 10) &&
									(c.css({
										"margin-right": -c
											.find("li:last-child")
											.outerWidth(),
									}),
									c
										.find("li:last-child")
										.insertBefore(
											c.find("li:first-child")
										)),
							  c
									.stop()
									.animate(
										{ marginRight: 0 },
										300,
										function () {
											$ = !0;
										}
									))
							: (0 <= parseInt(c.css("marginLeft"), 10) &&
									(c.css({
										"margin-left": -c
											.find("li:last-child")
											.outerWidth(),
									}),
									c
										.find("li:last-child")
										.insertBefore(
											c.find("li:first-child")
										)),
							  c
									.stop()
									.animate(
										{ marginLeft: 0 },
										300,
										function () {
											$ = !0;
										}
									))
						: (--b < 0 && (b = m - 1), _());
				}),
				r.init();
		}),
			(e.fn.breakingNews = function (i) {
				return this.each(function () {
					if (null == e(this).data("breakingNews")) {
						var s = new e.breakingNews(this, i);
						e(this).data("breakingNews", s);
					}
				});
			});
	})(jQuery);
